#+TITLE: Dan's nix config

* Introduction

=nix= is a functional DSL (Domain Specific Language) for creating stable,
reproducible builds. It can be installed as a standalone program in any linux
distro and MacOS or on top of it's own distro, =NixOS=.

After some months of experimenting with =nix=, I've come to see it as the 'missing
glue' of the unix philosophy. In the unix philosophy, the operating system is
composed of programs that do 'one thing' and do it well. While this facilitates
that new programs can be easily made by rearranging already existing tools,
there is a big hole when it comes to how one should obtain these tools and set
them up to be ready for use.

Package managers in other linux distributions try to fill in this hole. However,
=Nix= is one of a handful that offer guarantees of reproducibility and near
endless customization through it's DSL, making it ideal for developers.

* Installation

1. Clone this repository in ~/etc/nixos~.

   Back up all the files there before-hand, specially ~configuration-hardware.nix~.

   #+begin_src sh
git clone git@github.com:danilevy1212/nixos.git /etc/nixos
   #+end_src

2. Create the folder in ~hosts/<name-of-host>~, and move the backed-up  ~configuration-hardware.nix~ there.

3. Add a minimal ~default.nix~ that imports ~configuration-hardware.nix~, ~common.nix~ and ~home.nix~.

4. Add a your host configuration in ~flake.nix~:

   #+begin_src nix
...
  nixosConfigurations.<name-of-host> = nixpkgs.lib.nixosSystem {
    inherit system;
    modules =
      [ home-manager.nixosModules.home-manager ./common ./hosts/<name-of-host> ];
    specialArgs = {
      emacs-overlay = emacs-overlay.overlay;
      unstable = (import nixpkgs-unstable {
        inherit system;
        config.allowUnfree = true;
      });
    };
  }
...
   #+end_src

5. Build that =NixOS=. Set the path to the host configuration.

   #+begin_src sh
sudo nixos-rebuild switch --flake '/etc/nixos/.#<name-of-host>'
   #+end_src

6. Make =dlevym= the owner of all the files and folders of ~/etc/nixos~.

   #+begin_src sh
sudo chown -R dlevym:users /etc/nixos
   #+end_src

7. Install my [[https://github.com/danilevy1212/doom][doom]] emacs configuration, for maximum enjoyment!

   #+begin_src sh
doom env && doom tangle && doom install
   #+end_src

* Updating flake dependencies

To update all inputs:

#+begin_src shell
sudo nix flake update
#+end_src

To update a specific input:

#+begin_src shell
sudo nix flake lock --update-input <input-name>
#+end_src

* Reference

- [[https://nixos.wiki/wiki/Flakes][Nix Flakes wiki]]
- [[https://nixos.org/manual/nix/unstable/command-ref/new-cli/nix3-flake.html][Nix Flake command]]
- [[https://nixos.org/manual/nix/stable/][NixOS stable manual]]
- [[https://nixos.org/manual/nix/unstable][NixOS unstable manual]]
- [[https://nixos.org/manual/nixpkgs/stable/][nixpkgs stable manual]]
- [[https://nixos.org/manual/nixpkgs/unstable/][nixpkgs unstable manual]]
- [[https://github.com/nix-community/awesome-nix][Awesome Nix resources]]
